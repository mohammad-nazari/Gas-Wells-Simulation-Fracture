#if !defined(AFX_IXYPLOTCHANNELX_H__122C62E8_2185_4B5E_9D58_41EDA2D6FF43__INCLUDED_)
#define AFX_IXYPLOTCHANNELX_H__122C62E8_2185_4B5E_9D58_41EDA2D6FF43__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CiXYPlotChannelX wrapper class

class CiXYPlotChannelX : public COleDispatchDriver
{
public:
	CiXYPlotChannelX() {}		// Calls COleDispatchDriver default constructor
	CiXYPlotChannelX(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}
	CiXYPlotChannelX(const CiXYPlotChannelX& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}

// Attributes
public:

// Operations
public:
	CString GetName();
	void SetName(LPCTSTR lpszNewValue);
	BOOL GetVisible();
	void SetVisible(BOOL bNewValue);
	CString GetTitleText();
	void SetTitleText(LPCTSTR lpszNewValue);
	unsigned long GetColor();
	void SetColor(unsigned long newValue);
	BOOL GetVisibleInLegend();
	void SetVisibleInLegend(BOOL bNewValue);
	long GetRingBufferSize();
	void SetRingBufferSize(long nNewValue);
	BOOL GetTraceVisible();
	void SetTraceVisible(BOOL bNewValue);
	long GetTraceLineStyle();
	void SetTraceLineStyle(long nNewValue);
	long GetTraceLineWidth();
	void SetTraceLineWidth(long nNewValue);
	BOOL GetMarkersVisible();
	void SetMarkersVisible(BOOL bNewValue);
	long GetMarkersSize();
	void SetMarkersSize(long nNewValue);
	long GetMarkersStyle();
	void SetMarkersStyle(long nNewValue);
	unsigned long GetMarkersPenColor();
	void SetMarkersPenColor(unsigned long newValue);
	BOOL GetMarkersPenUseChannelColor();
	void SetMarkersPenUseChannelColor(BOOL bNewValue);
	long GetMarkersPenStyle();
	void SetMarkersPenStyle(long nNewValue);
	long GetMarkersPenWidth();
	void SetMarkersPenWidth(long nNewValue);
	unsigned long GetMarkersBrushColor();
	void SetMarkersBrushColor(unsigned long newValue);
	BOOL GetMarkersBrushUseChannelColor();
	void SetMarkersBrushUseChannelColor(BOOL bNewValue);
	long GetMarkersBrushStyle();
	void SetMarkersBrushStyle(long nNewValue);
	CString GetXAxisName();
	void SetXAxisName(LPCTSTR lpszNewValue);
	CString GetYAxisName();
	void SetYAxisName(LPCTSTR lpszNewValue);
	BOOL GetXAxisTrackingEnabled();
	void SetXAxisTrackingEnabled(BOOL bNewValue);
	BOOL GetYAxisTrackingEnabled();
	void SetYAxisTrackingEnabled(BOOL bNewValue);
	long GetCount();
	void SetCount(long nNewValue);
	double GetDataX(long Index);
	void SetDataX(long Index, double newValue);
	double GetDataY(long Index);
	void SetDataY(long Index, double newValue);
	BOOL GetDataNull(long Index);
	void SetDataNull(long Index, BOOL bNewValue);
	long AddXY(double X, double Y);
	void Clear();
	void SavePropertiesToFile(LPCTSTR FileName);
	void LoadPropertiesFromFile(LPCTSTR FileName);
	void SaveDataToFile(LPCTSTR FileName);
	void LoadDataFromFile(LPCTSTR FileName, BOOL ClearPreviousData);
	void LogActivate(BOOL Append);
	void LogDeactivate();
	CString GetLogFileName();
	void SetLogFileName(LPCTSTR lpszNewValue);
	long GetLogBufferSize();
	void SetLogBufferSize(long nNewValue);
	BOOL GetLoggingActive();
	double GetXMin();
	double GetXMax();
	double GetXMean();
	double GetYMin();
	double GetYMax();
	double GetYMean();
	BOOL GetDataMarkerShow(long Index);
	void SetDataMarkerShow(long Index, BOOL bNewValue);
	long GetDataMarkerStyle(long Index);
	void SetDataMarkerStyle(long Index, long nNewValue);
	BOOL GetMarkersAllowIndividual();
	void SetMarkersAllowIndividual(BOOL bNewValue);
	BOOL GetEnabled();
	void SetEnabled(BOOL bNewValue);
	BOOL GetPopupEnabled();
	void SetPopupEnabled(BOOL bNewValue);
	void AddXYArrays(const VARIANT& XData, const VARIANT& YData);
	VARIANT GetTag();
	void SetTag(const VARIANT& newValue);
	BOOL GetDataEmpty(long Index);
	void SetDataEmpty(long Index, BOOL bNewValue);
	double GetRunningYMin();
	double GetRunningYMax();
	double GetRunningYMean();
	CString GetOPCComputerName();
	void SetOPCComputerName(LPCTSTR lpszNewValue);
	CString GetOPCServerName();
	void SetOPCServerName(LPCTSTR lpszNewValue);
	CString GetOPCItemName();
	void SetOPCItemName(LPCTSTR lpszNewValue);
	long GetOPCUpdateRate();
	void SetOPCUpdateRate(long nNewValue);
	BOOL GetOPCAutoConnect();
	void SetOPCAutoConnect(BOOL bNewValue);
	void OPCActivate();
	void OPCDeactivate();
	long GetDrawStartIndex();
	long GetDrawStopIndex();
	long GetMarkersTurnOffLimit();
	void SetMarkersTurnOffLimit(long nNewValue);
	void DeletePoints(long Size);
	long GetDataStyle();
	void SetDataStyle(long nNewValue);
	long GetDataPointSize();
	long GetMaxDataPoints();
	long GetCapacity();
	long GetMemoryUsed();
	void AddXYArray(const VARIANT& Data);
	unsigned long GetDataTraceLineColor(long Index);
	void SetDataTraceLineColor(long Index, unsigned long newValue);
	long GetDataTraceLineWidth(long Index);
	void SetDataTraceLineWidth(long Index, long nNewValue);
	long GetDataTraceLineStyle(long Index);
	void SetDataTraceLineStyle(long Index, long nNewValue);
	long GetDataMarkerSize(long Index);
	void SetDataMarkerSize(long Index, long nNewValue);
	unsigned long GetDataMarkerPenColor(long Index);
	void SetDataMarkerPenColor(long Index, unsigned long newValue);
	long GetDataMarkerPenStyle(long Index);
	void SetDataMarkerPenStyle(long Index, long nNewValue);
	long GetDataMarkerPenWidth(long Index);
	void SetDataMarkerPenWidth(long Index, long nNewValue);
	unsigned long GetDataMarkerBrushColor(long Index);
	void SetDataMarkerBrushColor(long Index, unsigned long newValue);
	long GetDataMarkerBrushStyle(long Index);
	void SetDataMarkerBrushStyle(long Index, long nNewValue);
	long GetLayer(long Index);
	void SetLayer(long Index, long nNewValue);
	double GetRunningXMin();
	double GetRunningXMax();
	double GetRunningXMean();
	CString GetDataCursorXText();
	CString GetDataCursorYText();
	double GetDataCursorXValue();
	double GetDataCursorYValue();
	long GetDataCursorStatus();
	BOOL GetUserSelected();
	void SetUserSelected(BOOL bNewValue);
	long AddNull();
	long AddEmpty();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_IXYPLOTCHANNELX_H__122C62E8_2185_4B5E_9D58_41EDA2D6FF43__INCLUDED_)
